import{c as u,a as y,b as f,__tla as l}from"./bundle2.js";Promise.all([(()=>{try{return l}catch{}})()]).then(async()=>{function n(r){const e=u(JSON.stringify(r));try{return JSON.parse(e).idObjectRequest}catch{throw new Error(e)}}function a(r){const e=y(JSON.stringify(r));try{return JSON.parse(e).idRecoveryRequest}catch{throw new Error(e)}}async function o(r,e){return f(r,e)}async function c(r){return n(r)}async function i(r){return a(r)}self.addEventListener("message",async r=>{let{data:e}=r;if(e.op in t.ops)try{const s=await t.ops[e.op](...e.args);self.postMessage({reqID:e.reqID,status:"ok",result:s})}catch(s){self.postMessage({reqID:e.reqID,status:"err",result:s})}else self.postMessage({status:"err",reqID:e.reqID,result:"method in service not exist"})});var t={ops:{},register(r,e){this.ops[r]=e}};t.register("createAccountWorker",o),t.register("createIdentityWorker",c),t.register("recoverIdentityWorker",i)});
